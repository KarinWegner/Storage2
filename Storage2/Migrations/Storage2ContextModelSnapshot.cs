// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Storage2.Data;

#nullable disable

namespace Storage2.Migrations
{
    [DbContext(typeof(Storage2Context))]
    partial class Storage2ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Storage2.Models.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasMaxLength(100000)
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = 0,
                            Count = 320,
                            Description = "A dirt block. Can be tilled to grow seeds. Will grow grass or mycelium if placed next to source block",
                            Name = "Dirt",
                            OrderDate = new DateTime(2025, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 1
                        },
                        new
                        {
                            Id = 2,
                            Category = 0,
                            Count = 320,
                            Description = "Smooth stone. Can be crafted into stone bricks or redstone components. Great for natural landscape builds",
                            Name = "Stone",
                            OrderDate = new DateTime(2025, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 5
                        },
                        new
                        {
                            Id = 3,
                            Category = 0,
                            Count = 640,
                            Description = "Oak wood. Can be crafted into Oak Wood Planks or shaved to make Shaved Oak Wood",
                            Name = "Wood",
                            OrderDate = new DateTime(2025, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 12
                        },
                        new
                        {
                            Id = 4,
                            Category = 0,
                            Count = 200,
                            Description = "From the nether. Emits a yellow light. Can be crafted into redstone lamp.",
                            Name = "Glowstone",
                            OrderDate = new DateTime(2025, 6, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 80
                        },
                        new
                        {
                            Id = 5,
                            Category = 3,
                            Count = 5,
                            Description = "Basic sword. Gread for beginners!",
                            Name = "Stone sword",
                            OrderDate = new DateTime(2025, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 60
                        },
                        new
                        {
                            Id = 6,
                            Category = 3,
                            Count = 1,
                            Description = "Bow with the Infinity Enchantment. Never run out of ammo again!",
                            Name = "Infinity Bow",
                            OrderDate = new DateTime(2025, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 1200
                        },
                        new
                        {
                            Id = 7,
                            Category = 2,
                            Count = 5,
                            Description = "The second best pickaxe. Great speed and durability! Can be crafted into a netherite pickaxe",
                            Name = "Diamond pickaxe",
                            OrderDate = new DateTime(2025, 1, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 2000
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
